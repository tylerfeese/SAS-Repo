*------------------------------------------------------------*;
* EM Version: 15.1;
* SAS Release: 9.04.01M6P110718;
* Host: SAS-Server2019;
* Project Path: E:\tyler.feese;
* Project Name: Exam 2;
* Diagram Id: EMWS2;
* Diagram Name: Boston Housing Prices;
* Generated by: tyler.feese@LAVERNE;
* Date: 03APR2020:13:50:56;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* Macro Variables;
*------------------------------------------------------------*;
%let EM_PROJECT =;
%let EM_PROJECTNAME =;
%let EM_WSNAME =;
%let EM_WSDESCRIPTION =Boston Housing Prices;
%let EM_SUMMARY =WORK.SUMMARY;
%let EM_NUMTASKS =SINGLE;
%let EM_EDITMODE =R;
%let EM_DEBUGVAL =;
%let EM_ACTION =run;
*------------------------------------------------------------*;
%macro em_usedatatable;
%if ^%symexist(EM_USEDATATABLE) %then %do;
%let EM_USEDATATABLE = Y;
%end;
%if "&EM_USEDATATABLE" ne "N" %then %do;
%global Ids_data Ids_newdata;
*------------------------------------------------------------*;
* Data Tables;
*------------------------------------------------------------*;
%let Ids_data = SAMPSIO2.HOUSING;
%let Ids_newdata =;
*------------------------------------------------------------*;
%end;
%global Ids_source;
%if "&Ids_newdata" ne "" %then %do;
%let Ids_source = USERTABLE;
%end;
%else %do;
%let Ids_source = DATASOURCE;
%end;
%mend em_usedatatable;
%em_usedatatable;
*------------------------------------------------------------*;
* Create workspace data set;
*------------------------------------------------------------*;
data workspace;
length property $64 value $200;
property= 'PROJECTLOCATION';
value= "&EM_PROJECT";
output;
property= 'PROJECTNAME';
value= "&EM_PROJECTNAME";
output;
property= 'WORKSPACENAME';
value= "&EM_WSNAME";
output;
property= 'WORKSPACEDESCRIPTION';
value= "&EM_WSDESCRIPTION";
output;
property= 'SUMMARYDATASET';
value= "&EM_SUMMARY";
output;
property= 'NUMTASKS';
value= "&EM_NUMTASKS";
output;
property= 'EDITMODE';
value= "&EM_EDITMODE";
output;
property= 'DEBUG';
value= "&EM_DEBUGVAL";
output;
run;
*------------------------------------------------------------*;
* Create nodes data set;
*------------------------------------------------------------*;
data nodes;
length id $12 component $32 description $64 X 8 Y 8 diagramID $32 parentID $32;
id= "Tree6";
component="DecisionTree";
description= "CHAID-like + Validation";
diagramID="_ROOT_";
parentID="";
X=1053;
Y=369;
output;
id= "Tree5";
component="DecisionTree";
description= "CART-like Class Probability";
diagramID="_ROOT_";
parentID="";
X=1044;
Y=288;
output;
id= "Tree4";
component="DecisionTree";
description= "CART-Like";
diagramID="_ROOT_";
parentID="";
X=1042;
Y=225;
output;
id= "Tree3";
component="DecisionTree";
description= "CHAID-Like Tree";
diagramID="_ROOT_";
parentID="";
X=1039;
Y=162;
output;
id= "Tree";
component="DecisionTree";
description= "Decision Tree";
diagramID="_ROOT_";
parentID="";
X=1030;
Y=0;
output;
id= "Trans";
component="Transform";
description= "Transform Variables";
diagramID="_ROOT_";
parentID="";
X=318;
Y=220;
output;
id= "Reg";
component="Regression";
description= "Regression";
diagramID="_ROOT_";
parentID="";
X=1036;
Y=81;
output;
id= "Part";
component="Partition";
description= "Data Partition";
diagramID="_ROOT_";
parentID="";
X=808;
Y=222;
output;
id= "MdlComp";
component="ModelCompare";
description= "Model Comparison";
diagramID="_ROOT_";
parentID="";
X=1229;
Y=222;
output;
id= "Ids";
component="DataSource";
description= "HOUSING";
diagramID="_ROOT_";
parentID="";
X=138;
Y=222;
output;
id= "EMCODE";
component="SASCode";
description= "SAS Code";
diagramID="_ROOT_";
parentID="";
X=498;
Y=222;
output;
id= "Boost";
component="Boost";
description= "Gradient Boosting";
diagramID="_ROOT_";
parentID="";
X=1057;
Y=441;
output;
run;
*------------------------------------------------------------*;
* DataSource Properties;
*------------------------------------------------------------*;
data WORK.housing_P;
  length   Property                         $ 32
           Value                            $ 200
           ;

Property="Name";
Value="HOUSING";
output;
Property="CreateDate";
Value="1899644142.8";
output;
Property="ModifyDate";
Value="1899644142.8";
output;
Property="CreatedBy";
Value="tyler.feese";
output;
Property="ModifiedBy";
Value="tyler.feese";
output;
Property="SampleSizeType";
Value="";
output;
Property="SampleSize";
Value="";
output;
;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Tree6;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree6_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Tree6;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree6_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Tree5;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree5_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Tree5;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree5_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Tree4;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree4_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Tree4;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree4_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Tree3;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree3_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Tree3;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree3_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Tree;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Tree;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Variable Attributes for Trans;
*------------------------------------------------------------*;
data WORK.Trans_VariableAttribute;
length Variable $64 AttributeName $32 AttributeValue $64;
Variable='AGE';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='CRIM';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='DIS';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='INDUS';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='LSTAT';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='NOX';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='PTRATIO';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='RAD';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='RM';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='TAX';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
Variable='ZN';
AttributeName="METHOD";
AttributeValue='MAX_NORM';
Output;
run;
*------------------------------------------------------------*;
* INTERACTION Data Set for Trans;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* FORMULA Data Set for Trans;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* EMNOTES File for Trans;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Trans_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Reg;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Reg_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Part;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Part_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for MdlComp;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"MdlComp_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Variable Attributes for Ids;
*------------------------------------------------------------*;
data WORK.Ids_VariableAttribute;
length Variable $64 AttributeName $32 AttributeValue $64;
Variable='CHAS';
AttributeName="LEVEL";
AttributeValue='BINARY';
Output;
Variable='MEDV';
AttributeName="ROLE";
AttributeValue='TARGET';
Output;
run;
*------------------------------------------------------------*;
* EMNOTES File for Ids;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Ids_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for EMCODE;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"EMCODE_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
put 'options nodate nonumber;';
put ' ';
put 'proc dmdb data=&EM_IMPORT_DATA dmdbcat=cat;';
put '	var %EM_INTERVAL_INPUT %EM_INTERVAL_TARGET;';
put 'run;';
put ' ';
put 'title1 h=1.5 f=swissb ''Sequential Network Construction'';';
put 'proc neural data=&EM_IMPORT_DATA dmdbcat=cat;';
put '	input %EM_INTERVAL_INPUT / level=int id=in;';
put '	target %EM_INTERVAL_TARGET / level=int act=exp error=poisson id=out;';
put '											';
put '	title2 ''One Hidden Unit Network'';';
put '	hidden 1 /id=h1;';
put '	connect in h1 out;';
put '	prelim 5 maxiter=10;';
put '	train outfit=fit1(where=(_name_=''OVERALL''));';
put '	';
put '	title2 ''Two Hidden Unit Network'';';
put '	freeze in->h1 h1->out bias->h1;';
put '	hidden 1 /id=h2;';
put '	connect in h2 out;';
put '	prelim 5 maxiter=10;	';
put '	train;';
put '	thaw in->h1 h1->out bias->h1;';
put '	train outfit=fit2(where=(_name_=''OVERALL''));';
put ' ';
put '	title2 ''Three Hidden Unit Network'';';
put '	freeze in->h1 h1->out bias->h1 in->h2 h2->out bias->h2;';
put '	hidden 1 /id=h3;											';
put '	connect in h3 out;';
put '	prelim 5 maxiter=10;';
put '	train;';
put '	thaw in->h1 h1->out bias->h1 in->h2 h2->out bias->h2;';
put '	train outfit=fit3(where=(_name_=''OVERALL''));';
put 'run;';
put ' ';
put 'title2 ''One Hidden Unit Network'';';
put 'proc print data=fit1 noobs label;';
put '	var _sbc_;';
put 'run;';
put ' ';
put 'title2 ''Two Hidden Unit Network'';';
put 'proc print data=fit2 noobs label;';
put '	var _sbc_;';
put 'run;';
put ' ';
put 'title2 ''Three Hidden Unit Network'';';
put 'proc print data=fit3 noobs label;';
put '	var _sbc_;';
run;
*------------------------------------------------------------*;
* EMNOTES File for EMCODE;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"EMCODE_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Boost;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Boost_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Boost;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Boost_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Create node properties data set;
*------------------------------------------------------------*;
data nodeprops;
length id $12 property $64 value $400;
id= "Tree6";
property="Location";
value= "CATALOG";
output;
id= "Tree6";
property="Catalog";
value= "SASHELP.EMMODL.TREE.SOURCE";
output;
id= "Tree6";
property="ToolType";
value= "MODEL";
output;
id= "Tree6";
property="TrainMode";
value= "BATCH";
output;
id= "Tree6";
property="ImportModel";
value= "N";
output;
id= "Tree6";
property="Freeze";
value= "N";
output;
id= "Tree6";
property="UseMultipleTarget";
value= "N";
output;
id= "Tree6";
property="Precision";
value= "4";
output;
id= "Tree6";
property="IntervalCriterion";
value= "PROBF";
output;
id= "Tree6";
property="NominalCriterion";
value= "PROBCHISQ";
output;
id= "Tree6";
property="OrdinalCriterion";
value= "ENTROPY";
output;
id= "Tree6";
property="SigLevel";
value= "0.01";
output;
id= "Tree6";
property="Splitsize";
value= ".";
output;
id= "Tree6";
property="LeafSize";
value= "5";
output;
id= "Tree6";
property="MinCatSize";
value= "25";
output;
id= "Tree6";
property="Maxbranch";
value= "4";
output;
id= "Tree6";
property="Maxdepth";
value= "10";
output;
id= "Tree6";
property="Nrules";
value= "5";
output;
id= "Tree6";
property="Nsurrs";
value= "0";
output;
id= "Tree6";
property="MissingValue";
value= "USEINSEARCH";
output;
id= "Tree6";
property="UseVarOnce";
value= "N";
output;
id= "Tree6";
property="SplitPrecision";
value= "4";
output;
id= "Tree6";
property="Subtree";
value= "ASSESSMENT";
output;
id= "Tree6";
property="NSubtree";
value= "1";
output;
id= "Tree6";
property="AssessMeasure";
value= "ASE";
output;
id= "Tree6";
property="AssessPercentage";
value= "0.25";
output;
id= "Tree6";
property="NodeSample";
value= "20000";
output;
id= "Tree6";
property="Exhaustive";
value= "0";
output;
id= "Tree6";
property="Kass";
value= "Y";
output;
id= "Tree6";
property="KassApply";
value= "AFTER";
output;
id= "Tree6";
property="Depth";
value= "Y";
output;
id= "Tree6";
property="Inputs";
value= "N";
output;
id= "Tree6";
property="NumInputs";
value= "1";
output;
id= "Tree6";
property="VarSelection";
value= "Y";
output;
id= "Tree6";
property="Leafid";
value= "Y";
output;
id= "Tree6";
property="NodeRole";
value= "SEGMENT";
output;
id= "Tree6";
property="Performance";
value= "DISK";
output;
id= "Tree6";
property="CV";
value= "N";
output;
id= "Tree6";
property="CVNIter";
value= "10";
output;
id= "Tree6";
property="CVRepeat";
value= "1";
output;
id= "Tree6";
property="CVSeed";
value= "12345";
output;
id= "Tree6";
property="ObsImportance";
value= "N";
output;
id= "Tree6";
property="NumSingleImp";
value= "5";
output;
id= "Tree6";
property="UseDecision";
value= "N";
output;
id= "Tree6";
property="UsePriors";
value= "N";
output;
id= "Tree6";
property="ClassColorBy";
value= "PERCENTCORRECT";
output;
id= "Tree6";
property="IntColorBy";
value= "AVG";
output;
id= "Tree6";
property="ShowNodeId";
value= "Y";
output;
id= "Tree6";
property="ShowValid";
value= "Y";
output;
id= "Tree6";
property="Pred";
value= "N";
output;
id= "Tree6";
property="Target";
value= "ALL";
output;
id= "Tree6";
property="Count";
value= "Y";
output;
id= "Tree6";
property="ProfitLoss";
value= "NONE";
output;
id= "Tree6";
property="PercentCorrect";
value= "N";
output;
id= "Tree6";
property="AVG";
value= "Y";
output;
id= "Tree6";
property="RASE";
value= "N";
output;
id= "Tree6";
property="CreateSample";
value= "DEFAULT";
output;
id= "Tree6";
property="SampleMethod";
value= "RANDOM";
output;
id= "Tree6";
property="SampleSize";
value= "10000";
output;
id= "Tree6";
property="SampleSeed";
value= "12345";
output;
id= "Tree6";
property="ForceRun";
value= "N";
output;
id= "Tree6";
property="RunAction";
value= "Train";
output;
id= "Tree6";
property="Component";
value= "DecisionTree";
output;
id= "Tree6";
property="Criterion";
value= "DEFAULT";
output;
id= "Tree6";
property="Dummy";
value= "N";
output;
id= "Tree6";
property="Predict";
value= "Y";
output;
id= "Tree6";
property="ImportedTreeData";
value= "";
output;
id= "Tree6";
property="ToolPrefix";
value= "Tree";
output;
id= "Tree6";
property="EM_FILE_USERTRAINCODE";
value= "Tree6_USERTRAINCODE.sas";
output;
id= "Tree6";
property="EM_FILE_EMNOTES";
value= "Tree6_EMNOTES.txt";
output;
id= "Tree5";
property="Location";
value= "CATALOG";
output;
id= "Tree5";
property="Catalog";
value= "SASHELP.EMMODL.TREE.SOURCE";
output;
id= "Tree5";
property="ToolType";
value= "MODEL";
output;
id= "Tree5";
property="TrainMode";
value= "BATCH";
output;
id= "Tree5";
property="ImportModel";
value= "N";
output;
id= "Tree5";
property="Freeze";
value= "N";
output;
id= "Tree5";
property="UseMultipleTarget";
value= "N";
output;
id= "Tree5";
property="Precision";
value= "4";
output;
id= "Tree5";
property="IntervalCriterion";
value= "PROBF";
output;
id= "Tree5";
property="NominalCriterion";
value= "GINI";
output;
id= "Tree5";
property="OrdinalCriterion";
value= "GINI";
output;
id= "Tree5";
property="SigLevel";
value= "0.2";
output;
id= "Tree5";
property="Splitsize";
value= ".";
output;
id= "Tree5";
property="LeafSize";
value= "60";
output;
id= "Tree5";
property="MinCatSize";
value= "5";
output;
id= "Tree5";
property="Maxbranch";
value= "2";
output;
id= "Tree5";
property="Maxdepth";
value= "10";
output;
id= "Tree5";
property="Nrules";
value= "2";
output;
id= "Tree5";
property="Nsurrs";
value= "0";
output;
id= "Tree5";
property="MissingValue";
value= "USEINSEARCH";
output;
id= "Tree5";
property="UseVarOnce";
value= "N";
output;
id= "Tree5";
property="SplitPrecision";
value= "4";
output;
id= "Tree5";
property="Subtree";
value= "ASSESSMENT";
output;
id= "Tree5";
property="NSubtree";
value= "1";
output;
id= "Tree5";
property="AssessMeasure";
value= "ASE";
output;
id= "Tree5";
property="AssessPercentage";
value= "0.25";
output;
id= "Tree5";
property="NodeSample";
value= "20000";
output;
id= "Tree5";
property="Exhaustive";
value= "5000";
output;
id= "Tree5";
property="Kass";
value= "Y";
output;
id= "Tree5";
property="KassApply";
value= "BEFORE";
output;
id= "Tree5";
property="Depth";
value= "Y";
output;
id= "Tree5";
property="Inputs";
value= "N";
output;
id= "Tree5";
property="NumInputs";
value= "1";
output;
id= "Tree5";
property="VarSelection";
value= "Y";
output;
id= "Tree5";
property="Leafid";
value= "Y";
output;
id= "Tree5";
property="NodeRole";
value= "SEGMENT";
output;
id= "Tree5";
property="Performance";
value= "DISK";
output;
id= "Tree5";
property="CV";
value= "N";
output;
id= "Tree5";
property="CVNIter";
value= "10";
output;
id= "Tree5";
property="CVRepeat";
value= "1";
output;
id= "Tree5";
property="CVSeed";
value= "12345";
output;
id= "Tree5";
property="ObsImportance";
value= "N";
output;
id= "Tree5";
property="NumSingleImp";
value= "5";
output;
id= "Tree5";
property="UseDecision";
value= "N";
output;
id= "Tree5";
property="UsePriors";
value= "N";
output;
id= "Tree5";
property="ClassColorBy";
value= "PERCENTCORRECT";
output;
id= "Tree5";
property="IntColorBy";
value= "AVG";
output;
id= "Tree5";
property="ShowNodeId";
value= "Y";
output;
id= "Tree5";
property="ShowValid";
value= "Y";
output;
id= "Tree5";
property="Pred";
value= "N";
output;
id= "Tree5";
property="Target";
value= "ALL";
output;
id= "Tree5";
property="Count";
value= "Y";
output;
id= "Tree5";
property="ProfitLoss";
value= "NONE";
output;
id= "Tree5";
property="PercentCorrect";
value= "N";
output;
id= "Tree5";
property="AVG";
value= "Y";
output;
id= "Tree5";
property="RASE";
value= "N";
output;
id= "Tree5";
property="CreateSample";
value= "DEFAULT";
output;
id= "Tree5";
property="SampleMethod";
value= "RANDOM";
output;
id= "Tree5";
property="SampleSize";
value= "10000";
output;
id= "Tree5";
property="SampleSeed";
value= "12345";
output;
id= "Tree5";
property="ForceRun";
value= "N";
output;
id= "Tree5";
property="RunAction";
value= "Train";
output;
id= "Tree5";
property="Component";
value= "DecisionTree";
output;
id= "Tree5";
property="Criterion";
value= "DEFAULT";
output;
id= "Tree5";
property="Dummy";
value= "N";
output;
id= "Tree5";
property="Predict";
value= "Y";
output;
id= "Tree5";
property="ImportedTreeData";
value= "";
output;
id= "Tree5";
property="ToolPrefix";
value= "Tree";
output;
id= "Tree5";
property="EM_FILE_USERTRAINCODE";
value= "Tree5_USERTRAINCODE.sas";
output;
id= "Tree5";
property="EM_FILE_EMNOTES";
value= "Tree5_EMNOTES.txt";
output;
id= "Tree4";
property="Location";
value= "CATALOG";
output;
id= "Tree4";
property="Catalog";
value= "SASHELP.EMMODL.TREE.SOURCE";
output;
id= "Tree4";
property="ToolType";
value= "MODEL";
output;
id= "Tree4";
property="TrainMode";
value= "BATCH";
output;
id= "Tree4";
property="ImportModel";
value= "N";
output;
id= "Tree4";
property="Freeze";
value= "N";
output;
id= "Tree4";
property="UseMultipleTarget";
value= "N";
output;
id= "Tree4";
property="Precision";
value= "4";
output;
id= "Tree4";
property="IntervalCriterion";
value= "PROBF";
output;
id= "Tree4";
property="NominalCriterion";
value= "GINI";
output;
id= "Tree4";
property="OrdinalCriterion";
value= "GINI";
output;
id= "Tree4";
property="SigLevel";
value= "0.2";
output;
id= "Tree4";
property="Splitsize";
value= ".";
output;
id= "Tree4";
property="LeafSize";
value= "60";
output;
id= "Tree4";
property="MinCatSize";
value= "5";
output;
id= "Tree4";
property="Maxbranch";
value= "2";
output;
id= "Tree4";
property="Maxdepth";
value= "10";
output;
id= "Tree4";
property="Nrules";
value= "5";
output;
id= "Tree4";
property="Nsurrs";
value= "2";
output;
id= "Tree4";
property="MissingValue";
value= "USEINSEARCH";
output;
id= "Tree4";
property="UseVarOnce";
value= "N";
output;
id= "Tree4";
property="SplitPrecision";
value= "4";
output;
id= "Tree4";
property="Subtree";
value= "ASSESSMENT";
output;
id= "Tree4";
property="NSubtree";
value= "1";
output;
id= "Tree4";
property="AssessMeasure";
value= "ASE";
output;
id= "Tree4";
property="AssessPercentage";
value= "0.25";
output;
id= "Tree4";
property="NodeSample";
value= "20000";
output;
id= "Tree4";
property="Exhaustive";
value= "5000";
output;
id= "Tree4";
property="Kass";
value= "Y";
output;
id= "Tree4";
property="KassApply";
value= "BEFORE";
output;
id= "Tree4";
property="Depth";
value= "Y";
output;
id= "Tree4";
property="Inputs";
value= "N";
output;
id= "Tree4";
property="NumInputs";
value= "1";
output;
id= "Tree4";
property="VarSelection";
value= "Y";
output;
id= "Tree4";
property="Leafid";
value= "Y";
output;
id= "Tree4";
property="NodeRole";
value= "SEGMENT";
output;
id= "Tree4";
property="Performance";
value= "DISK";
output;
id= "Tree4";
property="CV";
value= "N";
output;
id= "Tree4";
property="CVNIter";
value= "10";
output;
id= "Tree4";
property="CVRepeat";
value= "1";
output;
id= "Tree4";
property="CVSeed";
value= "12345";
output;
id= "Tree4";
property="ObsImportance";
value= "N";
output;
id= "Tree4";
property="NumSingleImp";
value= "5";
output;
id= "Tree4";
property="UseDecision";
value= "N";
output;
id= "Tree4";
property="UsePriors";
value= "N";
output;
id= "Tree4";
property="ClassColorBy";
value= "PERCENTCORRECT";
output;
id= "Tree4";
property="IntColorBy";
value= "AVG";
output;
id= "Tree4";
property="ShowNodeId";
value= "Y";
output;
id= "Tree4";
property="ShowValid";
value= "Y";
output;
id= "Tree4";
property="Pred";
value= "N";
output;
id= "Tree4";
property="Target";
value= "ALL";
output;
id= "Tree4";
property="Count";
value= "Y";
output;
id= "Tree4";
property="ProfitLoss";
value= "NONE";
output;
id= "Tree4";
property="PercentCorrect";
value= "N";
output;
id= "Tree4";
property="AVG";
value= "Y";
output;
id= "Tree4";
property="RASE";
value= "N";
output;
id= "Tree4";
property="CreateSample";
value= "DEFAULT";
output;
id= "Tree4";
property="SampleMethod";
value= "RANDOM";
output;
id= "Tree4";
property="SampleSize";
value= "10000";
output;
id= "Tree4";
property="SampleSeed";
value= "12345";
output;
id= "Tree4";
property="ForceRun";
value= "N";
output;
id= "Tree4";
property="RunAction";
value= "Train";
output;
id= "Tree4";
property="Component";
value= "DecisionTree";
output;
id= "Tree4";
property="Criterion";
value= "DEFAULT";
output;
id= "Tree4";
property="Dummy";
value= "N";
output;
id= "Tree4";
property="Predict";
value= "Y";
output;
id= "Tree4";
property="ImportedTreeData";
value= "";
output;
id= "Tree4";
property="ToolPrefix";
value= "Tree";
output;
id= "Tree4";
property="EM_FILE_USERTRAINCODE";
value= "Tree4_USERTRAINCODE.sas";
output;
id= "Tree4";
property="EM_FILE_EMNOTES";
value= "Tree4_EMNOTES.txt";
output;
id= "Tree3";
property="Location";
value= "CATALOG";
output;
id= "Tree3";
property="Catalog";
value= "SASHELP.EMMODL.TREE.SOURCE";
output;
id= "Tree3";
property="ToolType";
value= "MODEL";
output;
id= "Tree3";
property="TrainMode";
value= "BATCH";
output;
id= "Tree3";
property="ImportModel";
value= "N";
output;
id= "Tree3";
property="Freeze";
value= "N";
output;
id= "Tree3";
property="UseMultipleTarget";
value= "N";
output;
id= "Tree3";
property="Precision";
value= "4";
output;
id= "Tree3";
property="IntervalCriterion";
value= "PROBF";
output;
id= "Tree3";
property="NominalCriterion";
value= "PROBCHISQ";
output;
id= "Tree3";
property="OrdinalCriterion";
value= "ENTROPY";
output;
id= "Tree3";
property="SigLevel";
value= "1.0E-4";
output;
id= "Tree3";
property="Splitsize";
value= ".";
output;
id= "Tree3";
property="LeafSize";
value= "150";
output;
id= "Tree3";
property="MinCatSize";
value= "5";
output;
id= "Tree3";
property="Maxbranch";
value= "6";
output;
id= "Tree3";
property="Maxdepth";
value= "6";
output;
id= "Tree3";
property="Nrules";
value= "5";
output;
id= "Tree3";
property="Nsurrs";
value= "0";
output;
id= "Tree3";
property="MissingValue";
value= "USEINSEARCH";
output;
id= "Tree3";
property="UseVarOnce";
value= "N";
output;
id= "Tree3";
property="SplitPrecision";
value= "4";
output;
id= "Tree3";
property="Subtree";
value= "LARGEST";
output;
id= "Tree3";
property="NSubtree";
value= "1";
output;
id= "Tree3";
property="AssessMeasure";
value= "ASE";
output;
id= "Tree3";
property="AssessPercentage";
value= "0.25";
output;
id= "Tree3";
property="NodeSample";
value= "20000";
output;
id= "Tree3";
property="Exhaustive";
value= "0";
output;
id= "Tree3";
property="Kass";
value= "Y";
output;
id= "Tree3";
property="KassApply";
value= "AFTER";
output;
id= "Tree3";
property="Depth";
value= "N";
output;
id= "Tree3";
property="Inputs";
value= "N";
output;
id= "Tree3";
property="NumInputs";
value= "1";
output;
id= "Tree3";
property="VarSelection";
value= "Y";
output;
id= "Tree3";
property="Leafid";
value= "Y";
output;
id= "Tree3";
property="NodeRole";
value= "SEGMENT";
output;
id= "Tree3";
property="Performance";
value= "DISK";
output;
id= "Tree3";
property="CV";
value= "N";
output;
id= "Tree3";
property="CVNIter";
value= "10";
output;
id= "Tree3";
property="CVRepeat";
value= "1";
output;
id= "Tree3";
property="CVSeed";
value= "12345";
output;
id= "Tree3";
property="ObsImportance";
value= "N";
output;
id= "Tree3";
property="NumSingleImp";
value= "5";
output;
id= "Tree3";
property="UseDecision";
value= "N";
output;
id= "Tree3";
property="UsePriors";
value= "N";
output;
id= "Tree3";
property="ClassColorBy";
value= "PERCENTCORRECT";
output;
id= "Tree3";
property="IntColorBy";
value= "AVG";
output;
id= "Tree3";
property="ShowNodeId";
value= "Y";
output;
id= "Tree3";
property="ShowValid";
value= "Y";
output;
id= "Tree3";
property="Pred";
value= "N";
output;
id= "Tree3";
property="Target";
value= "ALL";
output;
id= "Tree3";
property="Count";
value= "Y";
output;
id= "Tree3";
property="ProfitLoss";
value= "NONE";
output;
id= "Tree3";
property="PercentCorrect";
value= "N";
output;
id= "Tree3";
property="AVG";
value= "Y";
output;
id= "Tree3";
property="RASE";
value= "N";
output;
id= "Tree3";
property="CreateSample";
value= "DEFAULT";
output;
id= "Tree3";
property="SampleMethod";
value= "RANDOM";
output;
id= "Tree3";
property="SampleSize";
value= "10000";
output;
id= "Tree3";
property="SampleSeed";
value= "12345";
output;
id= "Tree3";
property="ForceRun";
value= "N";
output;
id= "Tree3";
property="RunAction";
value= "Train";
output;
id= "Tree3";
property="Component";
value= "DecisionTree";
output;
id= "Tree3";
property="Criterion";
value= "DEFAULT";
output;
id= "Tree3";
property="Dummy";
value= "N";
output;
id= "Tree3";
property="Predict";
value= "Y";
output;
id= "Tree3";
property="ImportedTreeData";
value= "";
output;
id= "Tree3";
property="ToolPrefix";
value= "Tree";
output;
id= "Tree3";
property="EM_FILE_USERTRAINCODE";
value= "Tree3_USERTRAINCODE.sas";
output;
id= "Tree3";
property="EM_FILE_EMNOTES";
value= "Tree3_EMNOTES.txt";
output;
id= "Tree";
property="Location";
value= "CATALOG";
output;
id= "Tree";
property="Catalog";
value= "SASHELP.EMMODL.TREE.SOURCE";
output;
id= "Tree";
property="ToolType";
value= "MODEL";
output;
id= "Tree";
property="TrainMode";
value= "BATCH";
output;
id= "Tree";
property="ImportModel";
value= "N";
output;
id= "Tree";
property="Freeze";
value= "N";
output;
id= "Tree";
property="UseMultipleTarget";
value= "N";
output;
id= "Tree";
property="Precision";
value= "4";
output;
id= "Tree";
property="IntervalCriterion";
value= "PROBF";
output;
id= "Tree";
property="NominalCriterion";
value= "PROBCHISQ";
output;
id= "Tree";
property="OrdinalCriterion";
value= "ENTROPY";
output;
id= "Tree";
property="SigLevel";
value= "0.2";
output;
id= "Tree";
property="Splitsize";
value= ".";
output;
id= "Tree";
property="LeafSize";
value= "5";
output;
id= "Tree";
property="MinCatSize";
value= "5";
output;
id= "Tree";
property="Maxbranch";
value= "2";
output;
id= "Tree";
property="Maxdepth";
value= "6";
output;
id= "Tree";
property="Nrules";
value= "5";
output;
id= "Tree";
property="Nsurrs";
value= "0";
output;
id= "Tree";
property="MissingValue";
value= "USEINSEARCH";
output;
id= "Tree";
property="UseVarOnce";
value= "N";
output;
id= "Tree";
property="SplitPrecision";
value= "4";
output;
id= "Tree";
property="Subtree";
value= "ASSESSMENT";
output;
id= "Tree";
property="NSubtree";
value= "1";
output;
id= "Tree";
property="AssessMeasure";
value= "ASE";
output;
id= "Tree";
property="AssessPercentage";
value= "0.25";
output;
id= "Tree";
property="NodeSample";
value= "20000";
output;
id= "Tree";
property="Exhaustive";
value= "5000";
output;
id= "Tree";
property="Kass";
value= "Y";
output;
id= "Tree";
property="KassApply";
value= "BEFORE";
output;
id= "Tree";
property="Depth";
value= "Y";
output;
id= "Tree";
property="Inputs";
value= "N";
output;
id= "Tree";
property="NumInputs";
value= "1";
output;
id= "Tree";
property="VarSelection";
value= "Y";
output;
id= "Tree";
property="Leafid";
value= "Y";
output;
id= "Tree";
property="NodeRole";
value= "SEGMENT";
output;
id= "Tree";
property="Performance";
value= "DISK";
output;
id= "Tree";
property="CV";
value= "N";
output;
id= "Tree";
property="CVNIter";
value= "10";
output;
id= "Tree";
property="CVRepeat";
value= "1";
output;
id= "Tree";
property="CVSeed";
value= "12345";
output;
id= "Tree";
property="ObsImportance";
value= "N";
output;
id= "Tree";
property="NumSingleImp";
value= "5";
output;
id= "Tree";
property="UseDecision";
value= "N";
output;
id= "Tree";
property="UsePriors";
value= "N";
output;
id= "Tree";
property="ClassColorBy";
value= "PERCENTCORRECT";
output;
id= "Tree";
property="IntColorBy";
value= "AVG";
output;
id= "Tree";
property="ShowNodeId";
value= "Y";
output;
id= "Tree";
property="ShowValid";
value= "Y";
output;
id= "Tree";
property="Pred";
value= "N";
output;
id= "Tree";
property="Target";
value= "ALL";
output;
id= "Tree";
property="Count";
value= "Y";
output;
id= "Tree";
property="ProfitLoss";
value= "NONE";
output;
id= "Tree";
property="PercentCorrect";
value= "N";
output;
id= "Tree";
property="AVG";
value= "Y";
output;
id= "Tree";
property="RASE";
value= "N";
output;
id= "Tree";
property="CreateSample";
value= "DEFAULT";
output;
id= "Tree";
property="SampleMethod";
value= "RANDOM";
output;
id= "Tree";
property="SampleSize";
value= "10000";
output;
id= "Tree";
property="SampleSeed";
value= "12345";
output;
id= "Tree";
property="ForceRun";
value= "N";
output;
id= "Tree";
property="RunAction";
value= "Train";
output;
id= "Tree";
property="Component";
value= "DecisionTree";
output;
id= "Tree";
property="Criterion";
value= "DEFAULT";
output;
id= "Tree";
property="Dummy";
value= "N";
output;
id= "Tree";
property="Predict";
value= "Y";
output;
id= "Tree";
property="ImportedTreeData";
value= "";
output;
id= "Tree";
property="ToolPrefix";
value= "Tree";
output;
id= "Tree";
property="EM_FILE_USERTRAINCODE";
value= "Tree_USERTRAINCODE.sas";
output;
id= "Tree";
property="EM_FILE_EMNOTES";
value= "Tree_EMNOTES.txt";
output;
id= "Trans";
property="DefaultMethod";
value= "NONE";
output;
id= "Trans";
property="DefaultTargetMethod";
value= "NONE";
output;
id= "Trans";
property="DefaultClassMethod";
value= "NONE";
output;
id= "Trans";
property="DefaultClassTargetMethod";
value= "NONE";
output;
id= "Trans";
property="Offset";
value= "1";
output;
id= "Trans";
property="MinOffset";
value= "Y";
output;
id= "Trans";
property="HideVariable";
value= "Y";
output;
id= "Trans";
property="RejectVariable";
value= "Y";
output;
id= "Trans";
property="GroupCutoff";
value= "0.1";
output;
id= "Trans";
property="GroupMissing";
value= "N";
output;
id= "Trans";
property="EmRandomSeed";
value= "12345";
output;
id= "Trans";
property="EmSampleSize";
value= "DEFAULT";
output;
id= "Trans";
property="EmSampleMethod";
value= "FIRSTN";
output;
id= "Trans";
property="MissingValue";
value= "USEINSEARCH";
output;
id= "Trans";
property="SummaryVariables";
value= "TRANSFORMED";
output;
id= "Trans";
property="SummaryStatistics";
value= "Y";
output;
id= "Trans";
property="UseMetaTransform";
value= "Y";
output;
id= "Trans";
property="MissingAsLevel";
value= "N";
output;
id= "Trans";
property="NumberofBins";
value= "VARIABLES";
output;
id= "Trans";
property="MaxOptimalBins";
value= "4";
output;
id= "Trans";
property="ForceRun";
value= "N";
output;
id= "Trans";
property="RunAction";
value= "Train";
output;
id= "Trans";
property="Component";
value= "Transform";
output;
id= "Trans";
property="EM_VARIABLEATTRIBUTES";
value= "WORK.Trans_VariableAttribute";
output;
id= "Trans";
property="EM_FILE_EMNOTES";
value= "Trans_EMNOTES.txt";
output;
id= "Reg";
property="MainEffect";
value= "Y";
output;
id= "Reg";
property="TwoFactor";
value= "N";
output;
id= "Reg";
property="Polynomial";
value= "N";
output;
id= "Reg";
property="PolynomialDegree";
value= "2";
output;
id= "Reg";
property="Terms";
value= "N";
output;
id= "Reg";
property="Error";
value= "NORMAL";
output;
id= "Reg";
property="LinkFunction";
value= "LOGIT";
output;
id= "Reg";
property="SuppressIntercept";
value= "N";
output;
id= "Reg";
property="InputCoding";
value= "DEVIATION";
output;
id= "Reg";
property="MinResourceUse";
value= "N";
output;
id= "Reg";
property="ModelSelection";
value= "NONE";
output;
id= "Reg";
property="SelectionCriterion";
value= "DEFAULT";
output;
id= "Reg";
property="SelectionDefault";
value= "Y";
output;
id= "Reg";
property="Sequential";
value= "N";
output;
id= "Reg";
property="SlEntry";
value= "0.05";
output;
id= "Reg";
property="SlStay";
value= "0.05";
output;
id= "Reg";
property="Start";
value= "0";
output;
id= "Reg";
property="Stop";
value= "0";
output;
id= "Reg";
property="Force";
value= "0";
output;
id= "Reg";
property="Hierarchy";
value= "CLASS";
output;
id= "Reg";
property="Rule";
value= "NONE";
output;
id= "Reg";
property="MaxStep";
value= ".";
output;
id= "Reg";
property="StepOutput";
value= "N";
output;
id= "Reg";
property="OptimizationTechnique";
value= "DEFAULT";
output;
id= "Reg";
property="ModelDefaults";
value= "Y";
output;
id= "Reg";
property="MaxIterations";
value= ".";
output;
id= "Reg";
property="MaxFunctionCalls";
value= ".";
output;
id= "Reg";
property="MaxCPUTime";
value= "1 HOUR";
output;
id= "Reg";
property="ConvDefaults";
value= "Y";
output;
id= "Reg";
property="AbsConvValue";
value= "-1.34078E154";
output;
id= "Reg";
property="AbsFValue";
value= "0";
output;
id= "Reg";
property="AbsFTime";
value= "1";
output;
id= "Reg";
property="AbsGValue";
value= "0.00001";
output;
id= "Reg";
property="AbsGTime";
value= "1";
output;
id= "Reg";
property="AbsXValue";
value= "1E-8";
output;
id= "Reg";
property="AbsXTime";
value= "1";
output;
id= "Reg";
property="FConvValue";
value= "0";
output;
id= "Reg";
property="FConvTimes";
value= "1";
output;
id= "Reg";
property="GConvValue";
value= "1E-6";
output;
id= "Reg";
property="GConvTimes";
value= "1";
output;
id= "Reg";
property="ClParm";
value= "N";
output;
id= "Reg";
property="Covout";
value= "N";
output;
id= "Reg";
property="CovB";
value= "N";
output;
id= "Reg";
property="CorB";
value= "N";
output;
id= "Reg";
property="Simple";
value= "N";
output;
id= "Reg";
property="SuppressOutput";
value= "N";
output;
id= "Reg";
property="Details";
value= "N";
output;
id= "Reg";
property="PrintDesignMatrix";
value= "N";
output;
id= "Reg";
property="SASSPDS";
value= "N";
output;
id= "Reg";
property="Performance";
value= "N";
output;
id= "Reg";
property="ExcludedVariable";
value= "REJECT";
output;
id= "Reg";
property="ForceRun";
value= "N";
output;
id= "Reg";
property="RunAction";
value= "Train";
output;
id= "Reg";
property="Component";
value= "Regression";
output;
id= "Reg";
property="Interactions";
value= "";
output;
id= "Reg";
property="EM_FILE_EMNOTES";
value= "Reg_EMNOTES.txt";
output;
id= "Part";
property="Method";
value= "DEFAULT";
output;
id= "Part";
property="TrainPct";
value= "70";
output;
id= "Part";
property="ValidatePct";
value= "30";
output;
id= "Part";
property="TestPct";
value= "0";
output;
id= "Part";
property="RandomSeed";
value= "12345";
output;
id= "Part";
property="OutputType";
value= "DATA";
output;
id= "Part";
property="IntervalDistribution";
value= "Y";
output;
id= "Part";
property="ClassDistribution";
value= "Y";
output;
id= "Part";
property="ForceRun";
value= "N";
output;
id= "Part";
property="RunAction";
value= "Train";
output;
id= "Part";
property="Component";
value= "Partition";
output;
id= "Part";
property="EM_FILE_EMNOTES";
value= "Part_EMNOTES.txt";
output;
id= "MdlComp";
property="NumberOfReportedLevels";
value= "1E-6";
output;
id= "MdlComp";
property="NormalizeReportingVariables";
value= "Y";
output;
id= "MdlComp";
property="DecileBin";
value= "20";
output;
id= "MdlComp";
property="LiftEpsilon";
value= "1E-6";
output;
id= "MdlComp";
property="ProfitEpsilon";
value= "1E-6";
output;
id= "MdlComp";
property="RoiEpsilon";
value= "1E-6";
output;
id= "MdlComp";
property="ScoreDistBin";
value= "20";
output;
id= "MdlComp";
property="RocChart";
value= "Y";
output;
id= "MdlComp";
property="RocEpsilon";
value= "0.01";
output;
id= "MdlComp";
property="AssessAllTargetLevels";
value= "N";
output;
id= "MdlComp";
property="SelectionData";
value= "DEFAULT";
output;
id= "MdlComp";
property="HPCriteria";
value= "_ASE_";
output;
id= "MdlComp";
property="intervalViyaCriteria";
value= "DEFAULT";
output;
id= "MdlComp";
property="classViyaCriteria";
value= "DEFAULT";
output;
id= "MdlComp";
property="SelectionTable";
value= "TRAIN";
output;
id= "MdlComp";
property="SelectionCriteria";
value= "_ASE_";
output;
id= "MdlComp";
property="SelectionDepth";
value= "10";
output;
id= "MdlComp";
property="NumberofBins";
value= "20";
output;
id= "MdlComp";
property="RecomputeAssess";
value= "N";
output;
id= "MdlComp";
property="TargetName";
value= "MEDV";
output;
id= "MdlComp";
property="ModelId";
value= "Boost";
output;
id= "MdlComp";
property="ModelDescription";
value= "Gradient Boosting";
output;
id= "MdlComp";
property="ModelCriteria";
value= "Train: Average Squared Error";
output;
id= "MdlComp";
property="ForceRun";
value= "N";
output;
id= "MdlComp";
property="RunAction";
value= "Train";
output;
id= "MdlComp";
property="Component";
value= "ModelCompare";
output;
id= "MdlComp";
property="StatisticUsed";
value= "_ASE_";
output;
id= "MdlComp";
property="TargetLabel";
value= "";
output;
id= "MdlComp";
property="EM_FILE_EMNOTES";
value= "MdlComp_EMNOTES.txt";
output;
id= "Ids";
property="DataSource";
value= "housing";
output;
id= "Ids";
property="Scope";
value= "LOCAL";
output;
id= "Ids";
property="Role";
value= "RAW";
output;
%let Ids_lib = %scan(&Ids_data, 1, .);
id= "Ids";
property="Library";
value= "&Ids_lib";
output;
%let Ids_member = %scan(&Ids_data, 2, .);
id= "Ids";
property="Table";
value= "&Ids_member";
output;
id= "Ids";
property="NCols";
value= "13";
output;
id= "Ids";
property="NObs";
value= "506";
output;
id= "Ids";
property="NBytes";
value= "62464";
output;
id= "Ids";
property="Segment";
value= "";
output;
id= "Ids";
property="DataSourceRole";
value= "RAW";
output;
id= "Ids";
property="OutputType";
value= "VIEW";
output;
id= "Ids";
property="ForceRun";
value= "N";
output;
id= "Ids";
property="ComputeStatistics";
value= "N";
output;
id= "Ids";
property="DataSelection";
value= "&Ids_source";
output;
id= "Ids";
property="NewTable";
value= "&Ids_newdata";
output;
id= "Ids";
property="MetaAdvisor";
value= "BASIC";
output;
id= "Ids";
property="ApplyIntervalLevelLowerLimit";
value= "Y";
output;
id= "Ids";
property="IntervalLowerLimit";
value= "20";
output;
id= "Ids";
property="ApplyMaxPercentMissing";
value= "Y";
output;
id= "Ids";
property="MaxPercentMissing";
value= "50";
output;
id= "Ids";
property="ApplyMaxClassLevels";
value= "Y";
output;
id= "Ids";
property="MaxClassLevels";
value= "20";
output;
id= "Ids";
property="IdentifyEmptyColumns";
value= "Y";
output;
id= "Ids";
property="VariableValidation";
value= "STRICT";
output;
id= "Ids";
property="NewVariableRole";
value= "REJECT";
output;
id= "Ids";
property="DropMapVariables";
value= "Y";
output;
id= "Ids";
property="DsId";
value= "housing";
output;
id= "Ids";
property="DsSampleName";
value= "";
output;
id= "Ids";
property="DsSampleSizeType";
value= "";
output;
id= "Ids";
property="DsSampleSize";
value= "";
output;
id= "Ids";
property="DsCreatedBy";
value= "tyler.feese";
output;
id= "Ids";
property="DsCreateDate";
value= "1899644142.8";
output;
id= "Ids";
property="DsModifiedBy";
value= "tyler.feese";
output;
id= "Ids";
property="DsModifyDate";
value= "1899644142.8";
output;
id= "Ids";
property="DsScope";
value= "LOCAL";
output;
id= "Ids";
property="Sample";
value= "D";
output;
id= "Ids";
property="SampleSizeType";
value= "PERCENT";
output;
id= "Ids";
property="SampleSizePercent";
value= "20";
output;
id= "Ids";
property="SampleSizeObs";
value= "10000";
output;
id= "Ids";
property="DBPassThrough";
value= "Y";
output;
id= "Ids";
property="RunAction";
value= "Train";
output;
id= "Ids";
property="Component";
value= "DataSource";
output;
id= "Ids";
property="Description";
value= "";
output;
id= "Ids";
property="EM_VARIABLEATTRIBUTES";
value= "WORK.Ids_VariableAttribute";
output;
id= "Ids";
property="EM_FILE_EMNOTES";
value= "Ids_EMNOTES.txt";
output;
id= "EMCODE";
property="UsePriors";
value= "Y";
output;
id= "EMCODE";
property="ToolType";
value= "UTILITY";
output;
id= "EMCODE";
property="DataNeeded";
value= "N";
output;
id= "EMCODE";
property="PublishCode";
value= "PUBLISH";
output;
id= "EMCODE";
property="ScoreCodeFormat";
value= "DATASTEP";
output;
id= "EMCODE";
property="MetaAdvisor";
value= "BASIC";
output;
id= "EMCODE";
property="ForceRun";
value= "N";
output;
id= "EMCODE";
property="RunAction";
value= "Train";
output;
id= "EMCODE";
property="Component";
value= "SASCode";
output;
id= "EMCODE";
property="ToolPrefix";
value= "EMCODE";
output;
id= "EMCODE";
property="EM_FILE_USERTRAINCODE";
value= "EMCODE_USERTRAINCODE.sas";
output;
id= "EMCODE";
property="EM_FILE_EMNOTES";
value= "EMCODE_EMNOTES.txt";
output;
id= "Boost";
property="Location";
value= "CATALOG";
output;
id= "Boost";
property="Catalog";
value= "SASHELP.EMMODL.BOOST.SOURCE";
output;
id= "Boost";
property="ToolType";
value= "MODEL";
output;
id= "Boost";
property="Iterations";
value= "100";
output;
id= "Boost";
property="CategoricalBins";
value= "30";
output;
id= "Boost";
property="IntervalBins";
value= "100";
output;
id= "Boost";
property="TrainProportion";
value= "60";
output;
id= "Boost";
property="Seed";
value= "12345";
output;
id= "Boost";
property="Shrinkage";
value= "0.1";
output;
id= "Boost";
property="LeafFraction";
value= "0.001";
output;
id= "Boost";
property="SplitSize";
value= ".";
output;
id= "Boost";
property="MinCatSize";
value= "5";
output;
id= "Boost";
property="MaxBranch";
value= "2";
output;
id= "Boost";
property="MaxDepth";
value= "2";
output;
id= "Boost";
property="NSurrs";
value= "0";
output;
id= "Boost";
property="Missing";
value= "USEINSEARCH";
output;
id= "Boost";
property="Huber";
value= "NO";
output;
id= "Boost";
property="ReUseVar";
value= "1";
output;
id= "Boost";
property="AssessMeasure";
value= "ASE";
output;
id= "Boost";
property="NodeSize";
value= "20000";
output;
id= "Boost";
property="Exhaustive";
value= "5000";
output;
id= "Boost";
property="VarSelection";
value= "Y";
output;
id= "Boost";
property="Performance";
value= "DISK";
output;
id= "Boost";
property="SubSeries";
value= "BEST";
output;
id= "Boost";
property="IterationNum";
value= "1";
output;
id= "Boost";
property="ObsImportance";
value= "N";
output;
id= "Boost";
property="NumSingleImp";
value= "5";
output;
id= "Boost";
property="CreateHStat";
value= "N";
output;
id= "Boost";
property="ForceRun";
value= "N";
output;
id= "Boost";
property="RunAction";
value= "Train";
output;
id= "Boost";
property="Component";
value= "Boost";
output;
id= "Boost";
property="Precision";
value= "0";
output;
id= "Boost";
property="Measure";
value= "PROFIT";
output;
id= "Boost";
property="NumPairImp";
value= "0";
output;
id= "Boost";
property="DataNeeded";
value= "Y";
output;
id= "Boost";
property="ToolPrefix";
value= "Boost";
output;
id= "Boost";
property="EM_FILE_USERTRAINCODE";
value= "Boost_USERTRAINCODE.sas";
output;
id= "Boost";
property="EM_FILE_EMNOTES";
value= "Boost_EMNOTES.txt";
output;
run;
*------------------------------------------------------------*;
* Create connections data set;
*------------------------------------------------------------*;
data connect;
length from to $12;
from="EMCODE";
to="Part";
output;
from="Boost";
to="MdlComp";
output;
from="Tree6";
to="MdlComp";
output;
from="Tree5";
to="MdlComp";
output;
from="Tree4";
to="MdlComp";
output;
from="Tree3";
to="MdlComp";
output;
from="Reg";
to="MdlComp";
output;
from="Tree";
to="MdlComp";
output;
from="Part";
to="Tree";
output;
from="Part";
to="Reg";
output;
from="Part";
to="Tree3";
output;
from="Part";
to="Tree4";
output;
from="Part";
to="Tree5";
output;
from="Part";
to="Tree6";
output;
from="Part";
to="Boost";
output;
from="Trans";
to="EMCODE";
output;
from="Ids";
to="Trans";
output;
run;
*------------------------------------------------------------*;
* Create actions to run data set;
*------------------------------------------------------------*;
%macro emaction;
%let actionstring = %upcase(&EM_ACTION);
%if %index(&actionstring, RUN) or %index(&actionstring, REPORT) %then %do;
data actions;
length id $12 action $40;
id="MdlComp";
%if %index(&actionstring, RUN) %then %do;
action='run';
output;
%end;
%if %index(&actionstring, REPORT) %then %do;
action='report';
output;
%end;
run;
%end;
%mend;
%emaction;
*------------------------------------------------------------*;
* Execute the actions;
*------------------------------------------------------------*;
%em5batch(execute, workspace=workspace, nodes=nodes, connect=connect, datasources=datasources, nodeprops=nodeprops, action=actions);
